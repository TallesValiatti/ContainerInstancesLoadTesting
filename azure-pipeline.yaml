trigger:
- master

variables:
  dockerRegistryServiceConnection: $(AcrServiceConnectionName)
  imageRepository: 'weatherforecast-service'
  containerRegistry: 'acrweatherforecastprodeastus.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: 'latest'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |

- stage: Deploy
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(Environment)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: Bash@3
              name: Delete container if exists
              displayName: Delete container if exists
              inputs:
                targetType: 'inline'
                script: |
                  containerCount=$(az container list \
                                  --resource-group rg-weatherforecast-service-prod-eastus \
                                  --query "length([?name == 'aci-weatherforecast-service-prod-eastus'])")

                  if [ "$containerCount" -gt "0" ] 
                  then
                      echo "Deletando container..."
                      az container delete \
                      --name aci-weatherforecast-service-prod-eastus \
                      --resource-group rg-weatherforecast-service-prod-eastus \
                      --yes
                  fi
            - task: AzureCLI@2
              name: DeployBicepFile
              displayName: Deploy Bicep file
              inputs:
                azureSubscription: $(ArmServiceConnectionName)
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  set -e
                  az deployment group create \
                  --name weatherforecast-service \
                  --resource-group  rg-weatherforecast-service-prod-eastus \
                  --template-file main.bicep
